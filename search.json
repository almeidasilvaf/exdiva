[{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to exdiva","title":"Contributing to exdiva","text":"outlines propose change exdiva. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to exdiva","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to exdiva","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to exdiva","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"almeidasilvaf/exdiva\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to exdiva","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to exdiva","text":"Please note exdiva project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with exdiva","title":"Getting help with exdiva","text":"Thank using exdiva! filing issue, things know make process smooth possible parties.","code":""},{"path":"/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with exdiva","text":"Start making minimally reproducible example, also known ‘reprex’. may use reprex R package create one, though necessary help. make R-question-asking endeavors easier. Learning use takes 5 10 minutes. tips make minimally reproducible example, see StackOverflow link.","code":""},{"path":"/SUPPORT.html","id":"where-to-post-it","dir":"","previous_headings":"","what":"Where to post it?","title":"Getting help with exdiva","text":"Bioconductor help web page gives overview places may help answer question. Bioconductor software related questions, bug reports feature requests, addressed appropriate Bioconductor/exdiva GitHub repository. Follow bug report feature request templates GitHub. package GitHub repository, see next bullet point. Bioconductor software usage questions addressed Bioconductor Support Website. Make sure use appropriate package tag, otherwise package authors get notification. General R questions can posed StackOverflow RStudio Community website especially pertain tidyverse RStudio GUI related products.","code":""},{"path":"/SUPPORT.html","id":"issues-or-feature-requests","dir":"","previous_headings":"","what":"Issues or Feature Requests","title":"Getting help with exdiva","text":"opening new issue feature request, sure search issues pull requests ensure one already exist implemented development version. Note. can remove :open search term issues page search open closed issues. See link learn modifying search.","code":""},{"path":"/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with exdiva","text":"Bioconductor maintainers limited resources strive responsive possible. Please forget tag appropriate maintainer issue GitHub username (e.g., @username). order make easy possible Bioconductor core developers remediate issue. Provide accurate, brief, reproducible report outlined issue templates. Thank trusting Bioconductor.","code":""},{"path":"/articles/exdiva_vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Measuring gene expression divergence between gene pairs","text":"Gene genome duplications important sources evolutionary innovation. transcriptional level, genes can diverge expression duplication, eventually leading novel functions, others stronger selection pressures preserve expression levels. understand evolution gene expression following duplication, developed exdiva, package provides users set metrics compute expression divergence duplicate pairs. exdiva integrates Bioconductor ecosystem accepting input core S4 classes, including SummarizedExperiment objects (bulk RNA-seq data), SingleCellExperiment objects (single-cell RNA-seq data), SpatialExperiment objects (spatial transcriptomics data).","code":""},{"path":"/articles/exdiva_vignette.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Measuring gene expression divergence between gene pairs","text":"can install exdiva Bioconductor following code: , can load package: also load required packages use vignette.","code":"if(!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"exdiva\")  ## Check that you have a valid Bioconductor installation BiocManager::valid() library(exdiva) library(SummarizedExperiment) set.seed(123) # for reproducibility"},{"path":"/articles/exdiva_vignette.html","id":"data-description","dir":"Articles","previous_headings":"","what":"Data description","title":"Measuring gene expression divergence between gene pairs","text":"vignette, use data publicly available experiment (SRA Study ID: SRP213876) authors investigated seed germination . thaliana seeds exposed red far-red light (Tognacca et al. 2019). Expression data transcripts per million (TPM) obtained refine.bio stored SummarizedExperiment object. Let’s first take look . entire set duplicated gene pairs . thaliana genome obtained Bioconductor package doubletrouble (Almeida-Silva Van de Peer 2024). Data stored data frame 3 columns : demonstrate metrics require gene coexpression networks, used BioNERO infer signed coexpression network data Wan et al. (2019), available refine.bio. , saved data frame module assignment module eigengenes objects .","code":"# Load expression data data(ath_se)  # Show `SummarizedExperiment` object ath_se #> class: SummarizedExperiment  #> dim: 22545 6  #> metadata(0): #> assays(1): TPM #> rownames(22545): AT1G01010 AT1G01020 ... ATMG01310 ATMG01410 #> rowData names(0): #> colnames(6): SRR9659514 SRR9659515 ... SRR9659518 SRR9659519 #> colData names(3): experiment tissue treatment  # Take a look at assay and colData slots assay(ath_se) |> head() #>           SRR9659514 SRR9659515 SRR9659516 SRR9659517 SRR9659518 SRR9659519 #> AT1G01010   77.71092   56.03711   76.01148   88.05801   70.60007   85.64420 #> AT1G01020  460.21158  417.35464  464.21402  247.83946  360.69977  303.03580 #> AT1G01030   49.03193   27.52164   46.13850   15.80170   21.04727   38.64825 #> AT1G01040  564.81950  380.74603  750.09094  572.19684  863.37067  687.85156 #> AT1G01050  605.36630  526.64270  666.37146  477.44717  684.85050  637.83575 #> AT1G01060  731.03310  603.77970  898.30460  103.11177  149.65310  123.45633 colData(ath_se) #> DataFrame with 6 rows and 3 columns #>             experiment      tissue   treatment #>            <character> <character> <character> #> SRR9659514   SRP213876       seeds         Red #> SRR9659515   SRP213876       seeds         Red #> SRR9659516   SRP213876       seeds         Red #> SRR9659517   SRP213876       seeds     Far-red #> SRR9659518   SRP213876       seeds     Far-red #> SRR9659519   SRP213876       seeds     Far-red # Load data data(ath_dups)  # Take a look at the first rows of the data frame head(ath_dups) #>        dup1      dup2 type #> 1 AT2G17930 AT4G36080   SD #> 2 AT1G03060 AT4G02660   SD #> 3 AT2G45540 AT3G60920   SD #> 4 ATCG01280 ATCG00860   SD #> 5 AT3G28770 AT5G39870   SD #> 6 AT1G05570 AT2G31960   SD # Load and show data frame of genes per module data(genes_and_modules) head(genes_and_modules) #>       Genes        Modules #> 1 AT1G01040         orange #> 2 AT1G01050    greenyellow #> 3 AT1G01060    darkorange2 #> 4 AT1G01080    lightyellow #> 5 AT1G01090    darkorange2 #> 6 AT1G01100 darkolivegreen  # Load and show data frame of module eigengenes data(ME) head(ME) #>            MEdarkmagenta     MEplum2 MEdarkolivegreen MEgreenyellow     MEplum1 #> SRR9331156   -0.10867620 -0.09945584     -0.183336028    0.04141757  0.04071353 #> SRR9331157    0.03272060 -0.03500161      0.007757575   -0.06353141 -0.04264297 #> SRR9331158   -0.08398072 -0.06468694      0.081085373    0.06774658  0.06892207 #> SRR9331159    0.07944359  0.11759883      0.092786208    0.02838570  0.08992221 #> SRR9331160    0.05883327 -0.02752882      0.013886315   -0.11184364 -0.04331340 #> SRR9331161    0.23683993  0.13817651     -0.239434683   -0.06339785  0.01315021 #>            MElightyellow      MEcyan    MEgrey60 MElightgreen      MEblack #> SRR9331156   0.005871434  0.28156756  0.12547552 -0.059923496  0.098952397 #> SRR9331157  -0.031379476 -0.08983925 -0.07475956 -0.233099121  0.050483212 #> SRR9331158  -0.129102982 -0.18508131 -0.14166572  0.018012265  0.061365626 #> SRR9331159  -0.125119712 -0.04581348 -0.06248737  0.009834189 -0.210741559 #> SRR9331160   0.006980476 -0.01652390  0.01593942 -0.091500946  0.006723972 #> SRR9331161  -0.086003591  0.11185457 -0.01823782 -0.216059157 -0.080836641 #>                MEwhite    MEorange MEdarkorange2 MEmediumorchid    MEpurple #> SRR9331156  0.08887598  0.20141331    0.08322848     0.01545135 -0.02562527 #> SRR9331157 -0.04970812 -0.05168774   -0.08969168     0.05588269  0.07066997 #> SRR9331158  0.15228640  0.12202822    0.11355630     0.20633328  0.08858222 #> SRR9331159 -0.11736622 -0.11017594   -0.06766365    -0.19711635  0.09052339 #> SRR9331160  0.03354560  0.07372503   -0.07013520    -0.05175000  0.15381676 #> SRR9331161 -0.22868743 -0.06243383   -0.23518730    -0.18128462  0.14940833 #>               MEcoral1    MEsalmon MEdarkorange  MEthistle2 MEpaleturquoise #> SRR9331156 -0.15034983 -0.17455918   0.17308273  0.06892352      0.15856487 #> SRR9331157  0.18849794  0.21166385  -0.08779447  0.03151171     -0.12345672 #> SRR9331158  0.18746348  0.06860765  -0.23436093 -0.22501425      0.08083409 #> SRR9331159  0.21133109  0.23461492   0.06919394  0.01037359     -0.22906818 #> SRR9331160  0.09663064  0.18920817  -0.04229932 -0.02042564     -0.06268189 #> SRR9331161 -0.19007306 -0.01012471   0.01179415  0.21475690      0.25418041 #>             MEhoneydew1   MEskyblue     MEbrown MElavenderblush3     MEgreen #> SRR9331156  0.119562501 -0.01621926  0.19310610     -0.037796161  0.03519341 #> SRR9331157  0.112527169  0.12491312  0.03259990      0.043107418  0.04621808 #> SRR9331158 -0.003695732  0.19282362 -0.22194670     -0.069485541 -0.17835832 #> SRR9331159 -0.143880322 -0.11824264 -0.00550279     -0.002720895 -0.05812352 #> SRR9331160  0.089585237  0.17195936  0.04222481      0.098539105  0.11178514 #> SRR9331161  0.056873328  0.04899228  0.26705874      0.217998654  0.14229403 #>                  MEtan   MEdarkred       MEred       MEgrey #> SRR9331156  0.08383924 -0.05607840 -0.04201499  0.006968271 #> SRR9331157  0.12610404 -0.05015207 -0.03727994  0.048408686 #> SRR9331158  0.05884285 -0.02513959 -0.11503723  0.012758211 #> SRR9331159 -0.16331102 -0.22126207 -0.05907953  0.011943965 #> SRR9331160  0.06474531 -0.16222775  0.02724823 -0.076827412 #> SRR9331161  0.21955979  0.01989451  0.05276451  0.122550745"},{"path":"/articles/exdiva_vignette.html","id":"calculating-expression-divergence","dir":"Articles","previous_headings":"","what":"Calculating expression divergence","title":"Measuring gene expression divergence between gene pairs","text":"exdiva offers different metrics expression divergence, namely: Spearman correlations gene pairs; τ\\tau index tissue specificity; Co-occurrence coexpression modules; Distance module eigengenes.","code":""},{"path":"/articles/exdiva_vignette.html","id":"metric-1-spearman-correlations-between-gene-pairs","dir":"Articles","previous_headings":"Calculating expression divergence","what":"Metric 1: Spearman correlations between gene pairs","title":"Measuring gene expression divergence between gene pairs","text":"calculate correlations gene pairs, use function calculate_cor(), takes input object class SummarizedExperiment, SingleCellExperiment, SpatialExperiment.","code":"# Calculate Spearman correlations between gene pairs dup10 <- ath_dups[1:10, ] # subset first 10 pairs for demonstration purposes cor_df <- calculate_cor(ath_se, dup10)  # Show output cor_df #>         dup1      dup2 type         cor #> 1  AT2G17930 AT4G36080   SD  0.65714286 #> 2  AT1G03060 AT4G02660   SD  0.94285714 #> 3  AT2G45540 AT3G60920   SD  0.25714286 #> 4  ATCG01280 ATCG00860   SD          NA #> 5  AT3G28770 AT5G39870   SD          NA #> 6  AT1G05570 AT2G31960   SD  0.31428571 #> 7  AT3G60860 AT1G01960   SD  0.71428571 #> 8  ATCG01130 ATCG01000   SD          NA #> 9  AT2G33240 AT1G04600   SD -0.02857143 #> 10 AT1G79000 AT3G12980   SD  0.88571429"},{"path":"/articles/exdiva_vignette.html","id":"metric-2-the-tau-index-of-tissue-specificity","dir":"Articles","previous_headings":"Calculating expression divergence","what":"Metric 2: The τ\\tau index of tissue specificity","title":"Measuring gene expression divergence between gene pairs","text":"τ\\tau index tissue specificity ranges 0 1, values close 0 indicating broader expression profile across tissues, values close 1 indicating tissue-specific profile. calculate τ\\tau, need matrix gene expression aggregated tissue level, genes rows tissue names columns. can obtained SummarizedExperiment object function aggregate_to_tissue(), calculates median (mean) gene expression per tissue using user-defined variable colData slot. However, since samples single tissue , simulate two-tissue data set modifying colData variable tissue: Now matrix gene expression per tissue, can use function calculate_tau(). Besides, calculating τ\\tau, function classifies genes one four expression-based categories: Null: Expression <1 TPM tissues. Weak: Expression <5 TPM tissues. Broad: τ\\tau <0.85. Specific: τ\\tau >= 0.85. , data frame τ\\tau indices per gene can used compare expression profiles duplicated gene pairs using function compare_tau() follows: column tau_diff indicates absolute difference τ\\tau indices gene pairs, column class_preserved indicates whether expression-based classes members gene pair.","code":"# Change tissue name in half of the samples ath_se$tissue[1:3] <- \"leaf\" colData(ath_se) #> DataFrame with 6 rows and 3 columns #>             experiment      tissue   treatment #>            <character> <character> <character> #> SRR9659514   SRP213876        leaf         Red #> SRR9659515   SRP213876        leaf         Red #> SRR9659516   SRP213876        leaf         Red #> SRR9659517   SRP213876       seeds     Far-red #> SRR9659518   SRP213876       seeds     Far-red #> SRR9659519   SRP213876       seeds     Far-red  # Get median expression per tissue using \"tissue\" variable in colData aexp <- aggregate_to_tissue(ath_se, \"tissue\")  head(aexp) #>                leaf     seeds #> AT1G01010  76.01148  85.64420 #> AT1G01020 460.21158 303.03580 #> AT1G01030  46.13850  21.04727 #> AT1G01040 564.81950 687.85156 #> AT1G01050 605.36630 637.83575 #> AT1G01060 731.03310 123.45633 # Calculate tau index of tissue specificity tau_df <- calculate_tau(aexp)  head(tau_df) #>        gene         tau class #> 1 AT1G01010 0.026414297 Broad #> 2 AT1G01020 0.067936283 Broad #> 3 AT1G01030 0.197218638 Broad #> 4 AT1G01040 0.030107101 Broad #> 5 AT1G01050 0.008075227 Broad #> 6 AT1G01060 0.268635181 Broad # Compare tau indices among duplicated gene pairs tau_comp <- compare_tau(tau_df, ath_dups)  head(tau_comp) #>        dup1      dup2 type    tau_dup1 class_dup1   tau_dup2 class_dup2 #> 1 AT4G01550 AT1G01010   DD 0.058046902      Broad 0.02641430      Broad #> 2 AT1G02220 AT1G01010   DD 0.404289662      Broad 0.02641430      Broad #> 3 AT4G01510 AT1G01020   DD 0.162417251      Broad 0.06793628      Broad #> 4 AT5G45150 AT1G01040   DD 0.003416496      Broad 0.03010710      Broad #> 5 AT4G15417 AT1G01040   DD 1.000000000       Weak 0.03010710      Broad #> 6 AT1G35530 AT1G01040   DD 0.143371321      Broad 0.03010710      Broad #>     tau_diff class_preserved #> 1 0.03163261            TRUE #> 2 0.37787537            TRUE #> 3 0.09448097            TRUE #> 4 0.02669061            TRUE #> 5 0.96989290           FALSE #> 6 0.11326422            TRUE"},{"path":"/articles/exdiva_vignette.html","id":"metric-3-co-occurrence-in-coexpression-modules","dir":"Articles","previous_headings":"Calculating expression divergence","what":"Metric 3: Co-occurrence in coexpression modules","title":"Measuring gene expression divergence between gene pairs","text":"Gene coexpression networks can used identify cluster genes similar expression profiles across samples, termed coexpression modules. , exdiva uses information compare module assignment genes pair check module (thus, similar expression profiles) different modules. can done function compare_coex_modules(). variable module_preservation summarizes results gene pair factor following levels: preserved: genes module. diverged: Genes different modules. one_absent: One gene pair present module. gene present input expression data (due low expression), module detection algorithm assign gene module. both_absent: genes present module. get frequency gene pairs category, can use:","code":"# Compare module assignment between duplicate pairs mod_comp <- compare_coex_modules(ath_dups, genes_and_modules)  head(mod_comp) #>        dup1      dup2 type module_dup1 module_dup2 module_preservation #> 1 AT1G02220 AT1G01010   DD        <NA>        <NA>         both_absent #> 2 AT4G01550 AT1G01010   DD        <NA>        <NA>         both_absent #> 3 AT4G01510 AT1G01020   DD        <NA>        <NA>         both_absent #> 4 AT4G15417 AT1G01040   DD        <NA>      orange          one_absent #> 5 AT1G35530 AT1G01040   DD        <NA>      orange          one_absent #> 6 AT5G45150 AT1G01040   DD        <NA>      orange          one_absent # Get frequency of gene pairs for each category table(mod_comp$module_preservation) #>  #>   preserved    diverged  one_absent both_absent  #>         998        2924       13223       30340"},{"path":"/articles/exdiva_vignette.html","id":"metric-4-distance-between-module-eigengenes","dir":"Articles","previous_headings":"Calculating expression divergence","what":"Metric 4: Distance between module eigengenes","title":"Measuring gene expression divergence between gene pairs","text":"Co-occurrence coexpression modules binary: genes either module . However, genes can different, (somewhat) similar modules, completely different modules. case, need way comparing distance modules. , calculating correlations module eigengenes (.e., first principal component module, describes variation). can done function compare_coex_me(). Importantly, comparison made genes diverged category (see previous section details).","code":"# Compare module eigengenes for diverged duplicate pairs me_comp <- compare_coex_me(mod_comp, ME)  head(me_comp) #>        dup1      dup2 type      ME_cor #> 1 AT2G24270 AT1G79440   DD  0.06105458 #> 2 AT2G33990 AT5G03040 dTRD -0.56880204 #> 3 AT2G38400 AT5G46180   DD -0.56880204 #> 4 AT5G55700 AT3G23920   DD -0.56880204 #> 5 AT4G39660 AT1G80600   DD -0.56880204 #> 6 AT2G33990 AT3G22190 dTRD -0.56880204"},{"path":"/articles/exdiva_vignette.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Measuring gene expression divergence between gene pairs","text":"document created following conditions:","code":"sessioninfo::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.4.1 (2024-06-14) #>  os       Ubuntu 22.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       UTC #>  date     2024-09-03 #>  pandoc   3.2 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package              * version date (UTC) lib source #>  abind                  1.4-5   2016-07-21 [1] RSPM (R 4.4.0) #>  Biobase              * 2.64.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) #>  BiocGenerics         * 0.50.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) #>  BiocManager            1.30.25 2024-08-28 [1] RSPM (R 4.4.0) #>  BiocStyle            * 2.32.1  2024-06-16 [1] Bioconductor 3.19 (R 4.4.1) #>  bookdown               0.40    2024-07-02 [1] RSPM (R 4.4.0) #>  bslib                  0.8.0   2024-07-29 [2] RSPM (R 4.4.0) #>  cachem                 1.1.0   2024-05-16 [2] RSPM (R 4.4.0) #>  cli                    3.6.3   2024-06-21 [2] RSPM (R 4.4.0) #>  crayon                 1.5.3   2024-06-20 [2] RSPM (R 4.4.0) #>  DelayedArray           0.30.1  2024-05-07 [1] Bioconductor 3.19 (R 4.4.1) #>  desc                   1.4.3   2023-12-10 [2] RSPM (R 4.4.0) #>  digest                 0.6.37  2024-08-19 [2] RSPM (R 4.4.0) #>  evaluate               0.24.0  2024-06-10 [2] RSPM (R 4.4.0) #>  exdiva               * 0.99.0  2024-09-03 [1] Bioconductor #>  fastmap                1.2.0   2024-05-15 [2] RSPM (R 4.4.0) #>  fs                     1.6.4   2024-04-25 [2] RSPM (R 4.4.0) #>  GenomeInfoDb         * 1.40.1  2024-05-24 [1] Bioconductor 3.19 (R 4.4.1) #>  GenomeInfoDbData       1.2.12  2024-06-25 [1] Bioconductor #>  GenomicRanges        * 1.56.1  2024-06-12 [1] Bioconductor 3.19 (R 4.4.1) #>  htmltools              0.5.8.1 2024-04-04 [2] RSPM (R 4.4.0) #>  htmlwidgets            1.6.4   2023-12-06 [2] RSPM (R 4.4.0) #>  httr                   1.4.7   2023-08-15 [2] RSPM (R 4.4.0) #>  IRanges              * 2.38.1  2024-07-03 [1] Bioconductor 3.19 (R 4.4.1) #>  jquerylib              0.1.4   2021-04-26 [2] RSPM (R 4.4.0) #>  jsonlite               1.8.8   2023-12-04 [2] RSPM (R 4.4.0) #>  knitr                  1.48    2024-07-07 [2] RSPM (R 4.4.0) #>  lattice                0.22-6  2024-03-20 [3] CRAN (R 4.4.1) #>  lifecycle              1.0.4   2023-11-07 [2] RSPM (R 4.4.0) #>  Matrix                 1.7-0   2024-04-26 [3] CRAN (R 4.4.1) #>  MatrixGenerics       * 1.16.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) #>  matrixStats          * 1.3.0   2024-04-11 [1] RSPM (R 4.4.0) #>  pkgdown                2.1.0   2024-07-06 [2] RSPM (R 4.4.0) #>  R6                     2.5.1   2021-08-19 [2] RSPM (R 4.4.0) #>  ragg                   1.3.2   2024-05-15 [2] RSPM (R 4.4.0) #>  rlang                  1.1.4   2024-06-04 [2] RSPM (R 4.4.0) #>  rmarkdown              2.28    2024-08-17 [2] RSPM (R 4.4.0) #>  S4Arrays               1.4.1   2024-05-20 [1] Bioconductor 3.19 (R 4.4.1) #>  S4Vectors            * 0.42.1  2024-07-03 [1] Bioconductor 3.19 (R 4.4.1) #>  sass                   0.4.9   2024-03-15 [2] RSPM (R 4.4.0) #>  sessioninfo            1.2.2   2021-12-06 [2] RSPM (R 4.4.0) #>  SparseArray            1.4.8   2024-05-24 [1] Bioconductor 3.19 (R 4.4.1) #>  SummarizedExperiment * 1.34.0  2024-05-01 [1] Bioconductor 3.19 (R 4.4.1) #>  systemfonts            1.1.0   2024-05-15 [2] RSPM (R 4.4.0) #>  textshaping            0.4.0   2024-05-24 [2] RSPM (R 4.4.0) #>  UCSC.utils             1.0.0   2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) #>  xfun                   0.47    2024-08-17 [2] RSPM (R 4.4.0) #>  XVector                0.44.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) #>  yaml                   2.3.10  2024-07-26 [2] RSPM (R 4.4.0) #>  zlibbioc               1.50.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) #>  #>  [1] /__w/_temp/Library #>  [2] /usr/local/lib/R/site-library #>  [3] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fabrício Almeida-Silva. Author, maintainer. Yves Van de Peer. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Almeida-Silva F, Van de Peer Y (2024). exdiva: metric set compute expression divergence gene pairs. R package version 0.99.0, https://github.com/almeidasilvaf/exdiva.","code":"@Manual{,   title = {exdiva: A metric set to compute expression divergence between gene pairs},   author = {Fabrício Almeida-Silva and Yves {Van de Peer}},   year = {2024},   note = {R package version 0.99.0},   url = {https://github.com/almeidasilvaf/exdiva}, }"},{"path":"/index.html","id":"exdiva-","dir":"","previous_headings":"","what":"A metric set to compute expression divergence between gene pairs","title":"A metric set to compute expression divergence between gene pairs","text":"exdiva helps understand evolution gene expression following gene genome duplications providing set metrics gene expression divergence, including: Spearman correlations gene pairs; τ\\tau index tissue specificity; Co-occurrence coexpression modules; Dissimilarity module eigengenes.","code":""},{"path":"/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation instructions","title":"A metric set to compute expression divergence between gene pairs","text":"Get latest stable R release CRAN. install exdiva Bioconductor using following code: development version GitHub :","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"exdiva\") BiocManager::install(\"almeidasilvaf/exdiva\")"},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"A metric set to compute expression divergence between gene pairs","text":"citation output using citation('exdiva') R. Please run check updates cite exdiva. Please note exdiva made possible thanks many R bioinformatics software authors, cited either vignettes /paper(s) describing package.","code":"print(citation('exdiva'), bibtex = TRUE) #> To cite package 'exdiva' in publications use: #>  #>   Almeida-Silva F, Van de Peer Y (2024). _exdiva: A metric set to #>   compute expression divergence between gene pairs_. R package version #>   0.99.0, <https://github.com/almeidasilvaf/exdiva>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {exdiva: A metric set to compute expression divergence between gene pairs}, #>     author = {Fabrício Almeida-Silva and Yves {Van de Peer}}, #>     year = {2024}, #>     note = {R package version 0.99.0}, #>     url = {https://github.com/almeidasilvaf/exdiva}, #>   }"},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A metric set to compute expression divergence between gene pairs","text":"Please note exdiva project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"development-tools","dir":"","previous_headings":"","what":"Development tools","title":"A metric set to compute expression divergence between gene pairs","text":"Continuous code testing possible thanks GitHub actions usethis, remotes, rcmdcheck customized use Bioconductor’s docker containers BiocCheck. Code coverage assessment possible thanks codecov covr. documentation website automatically updated thanks pkgdown. documentation formatted thanks devtools roxygen2. package developed using biocthis.","code":""},{"path":"/reference/ME.html","id":null,"dir":"Reference","previous_headings":"","what":"Module eigengenes for a coexpression network inferred from SRP201971 — ME","title":"Module eigengenes for a coexpression network inferred from SRP201971 — ME","text":"Expression data (TPM) sample metadata obtained Refine Bio. signed gene coexpression network inferred BioNERO package.","code":""},{"path":"/reference/ME.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Module eigengenes for a coexpression network inferred from SRP201971 — ME","text":"","code":"data(ME)"},{"path":"/reference/ME.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Module eigengenes for a coexpression network inferred from SRP201971 — ME","text":"data frame samples rows module eigengenes columns.","code":""},{"path":"/reference/ME.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Module eigengenes for a coexpression network inferred from SRP201971 — ME","text":"","code":"data(ME)"},{"path":"/reference/aggregate_to_tissue.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate expression to tissue level — aggregate_to_tissue","title":"Aggregate expression to tissue level — aggregate_to_tissue","text":"Aggregate expression tissue level","code":""},{"path":"/reference/aggregate_to_tissue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate expression to tissue level — aggregate_to_tissue","text":"","code":"aggregate_to_tissue(   se,   tissue_column,   assay_name = NULL,   aggregation_method = \"median\" )"},{"path":"/reference/aggregate_to_tissue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate expression to tissue level — aggregate_to_tissue","text":"se SummarizedExperiment object expression data TPM (normalized library size) colData slot. tissue_column Character indicating name column colData(se) containing tissue information sample. assay_name Character specifying name assay use. NULL, first assay extracted. Default: NULL. aggregation_method Character indicating method use aggregate samples tissue calculating \\(\\tau\\) (see details ). One \"median\" \"mean\". Default: \"median\".","code":""},{"path":"/reference/aggregate_to_tissue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate expression to tissue level — aggregate_to_tissue","text":"gene expression matrix genes rows tissues columns.","code":""},{"path":"/reference/aggregate_to_tissue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate expression to tissue level — aggregate_to_tissue","text":"","code":"# Load data data(ath_se) se <- ath_se  # Simulate different tissues SummarizedExperiment::colData(se)$tissue <- c(rep(\"seed\", 3), rep(\"leaf\", 3))  # Aggregate expression aexp <- aggregate_to_tissue(se, \"tissue\")"},{"path":"/reference/ath_dups.html","id":null,"dir":"Reference","previous_headings":"","what":"Duplicate gene pairs in the genome of Arabidopsis thaliana — ath_dups","title":"Duplicate gene pairs in the genome of Arabidopsis thaliana — ath_dups","text":"Duplicate gene pairs identified classified duplication mode doubletrouble package.","code":""},{"path":"/reference/ath_dups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duplicate gene pairs in the genome of Arabidopsis thaliana — ath_dups","text":"","code":"data(ath_dups)"},{"path":"/reference/ath_dups.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Duplicate gene pairs in the genome of Arabidopsis thaliana — ath_dups","text":"data frame following variables: dup1 Character, duplicated gene 1. dup2 Character, duplicated gene 2. type Factor, duplication mode.","code":""},{"path":"/reference/ath_dups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Duplicate gene pairs in the genome of Arabidopsis thaliana — ath_dups","text":"","code":"data(ath_dups)"},{"path":"/reference/ath_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression data for experiment SRP213876 — ath_se","title":"Expression data for experiment SRP213876 — ath_se","text":"Expression data (TPM) sample metadata obtained Refine Bio.","code":""},{"path":"/reference/ath_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression data for experiment SRP213876 — ath_se","text":"","code":"data(ath_se)"},{"path":"/reference/ath_se.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Expression data for experiment SRP213876 — ath_se","text":"SummarizedExperiment object assay named TPM three colData columns: experiment Character, experiment accession. tissue Character, tissue name. treatment Character, treatment.","code":""},{"path":"/reference/ath_se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expression data for experiment SRP213876 — ath_se","text":"","code":"data(ath_se)"},{"path":"/reference/calculate_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlation coefficients and permutation P-values for gene pairs — calculate_cor","title":"Calculate correlation coefficients and permutation P-values for gene pairs — calculate_cor","text":"Calculate correlation coefficients permutation P-values gene pairs","code":""},{"path":"/reference/calculate_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlation coefficients and permutation P-values for gene pairs — calculate_cor","text":"","code":"calculate_cor(se, dups, assay_name = NULL, method = \"spearman\")"},{"path":"/reference/calculate_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlation coefficients and permutation P-values for gene pairs — calculate_cor","text":"se SummarizedExperiment SingleCellExperiment SpatialExperiment object expression data. dups data frame duplicate pairs, duplicated genes pair columns 1 2. Additional columns allowed, ignored present. assay_name Character specifying name assay use. NULL, first assay extracted. Default: NULL. method Character indicating correlation coefficient compute. One 'pearson', 'spearman', 'kendall'. Default: 'spearman'.","code":""},{"path":"/reference/calculate_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlation coefficients and permutation P-values for gene pairs — calculate_cor","text":"data frame exactly one passed dups, extra column named cor (numeric) correlation coefficients. Pairs NA column . least genes pair present assay slot se; ii. least genes pair standard deviation 0.","code":""},{"path":"/reference/calculate_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate correlation coefficients and permutation P-values for gene pairs — calculate_cor","text":"","code":"# Load data data(ath_se) data(ath_dups)  # Subset data dups <- ath_dups[ath_dups$type == \"TD\", ] se <- ath_se  # Calculate correlation cor_df <- calculate_cor(se, dups, method = \"pearson\")"},{"path":"/reference/calculate_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate \\(\\tau\\) (Tau) index of tissue specificity — calculate_tau","title":"Calculate \\(\\tau\\) (Tau) index of tissue specificity — calculate_tau","text":"Calculate \\(\\tau\\) (Tau) index tissue specificity","code":""},{"path":"/reference/calculate_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate \\(\\tau\\) (Tau) index of tissue specificity — calculate_tau","text":"","code":"calculate_tau(aggregated_exp, log = TRUE)"},{"path":"/reference/calculate_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate \\(\\tau\\) (Tau) index of tissue specificity — calculate_tau","text":"aggregated_exp gene expression matrix genes rows tissues columns returned aggregate_to_tissue(). log Logical indicating whether matrix aggregated gene expression per tissue log-transformed using \\(log_2(x+1)\\) calculating \\(\\tau\\).","code":""},{"path":"/reference/calculate_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate \\(\\tau\\) (Tau) index of tissue specificity — calculate_tau","text":"data frame following variables: gene Character, gene ID. tau Numeric, \\(\\tau\\) index tissue specificity. class Factor, expression-based class. One 'Null', 'Weak', 'Broad', 'Specific' (see Details field). .","code":""},{"path":"/reference/calculate_tau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate \\(\\tau\\) (Tau) index of tissue specificity — calculate_tau","text":"Besides calculating \\(\\tau\\) indices, function classifies genes expression-based classes, namely: Null Expression <1 tissues. Weak Expression <5 tissues. Broad \\(\\tau\\) <0.85. Specific \\(\\tau\\) >=0.85.","code":""},{"path":"/reference/calculate_tau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate \\(\\tau\\) (Tau) index of tissue specificity — calculate_tau","text":"","code":"# Load data data(ath_se) se <- ath_se  # Simulate different tissues SummarizedExperiment::colData(se)$tissue <- c(rep(\"seed\", 3), rep(\"leaf\", 3))  # Aggregate expression to tissue level aexp <- aggregate_to_tissue(se, \"tissue\")  # Calculate Tau tau_df <- calculate_tau(aexp)"},{"path":"/reference/compare_coex_me.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coexpression module eigengenes for diverged duplicate pairs — compare_coex_me","title":"Compare coexpression module eigengenes for diverged duplicate pairs — compare_coex_me","text":"Compare coexpression module eigengenes diverged duplicate pairs","code":""},{"path":"/reference/compare_coex_me.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coexpression module eigengenes for diverged duplicate pairs — compare_coex_me","text":"","code":"compare_coex_me(module_comp, ME, cor_method = \"spearman\")"},{"path":"/reference/compare_coex_me.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare coexpression module eigengenes for diverged duplicate pairs — compare_coex_me","text":"module_comp data frame module assignment comparison duplicate pairs returned compare_coex_modules(). matrix data frame module eigengenes, samples rows eigengenes columns. can obtained, instance, BioNERO::exp2gcn(). cor_method Character indicating correlation method use calculate pairwise correlations module eigengenes. Default: \"spearman\".","code":""},{"path":"/reference/compare_coex_me.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare coexpression module eigengenes for diverged duplicate pairs — compare_coex_me","text":"data frame duplicate pairs (additional columns metadata pairs) column named ME_cor correlation eigengenes modules gene .","code":""},{"path":"/reference/compare_coex_me.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare coexpression module eigengenes for diverged duplicate pairs — compare_coex_me","text":"function aims derive continuous measure binary variable (preserved vs diverged modules genes duplicate pair). , function calculates correlation coefficients module eigengenes diverged gene pairs. correlation coefficients can interpreted measure much genes pair diverged (.e., different modules, quite similar modules).","code":""},{"path":"/reference/compare_coex_me.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare coexpression module eigengenes for diverged duplicate pairs — compare_coex_me","text":"","code":"data(ath_dups) data(genes_and_modules) data(ME) dups <- ath_dups genes_modules <- genes_and_modules  # Compare module_comp <- compare_coex_modules(dups, genes_and_modules) comp <- compare_coex_me(module_comp, ME)"},{"path":"/reference/compare_coex_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare coexpression module assignment for gene pairs — compare_coex_modules","title":"Compare coexpression module assignment for gene pairs — compare_coex_modules","text":"Compare coexpression module assignment gene pairs","code":""},{"path":"/reference/compare_coex_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare coexpression module assignment for gene pairs — compare_coex_modules","text":"","code":"compare_coex_modules(dups, genes_modules)"},{"path":"/reference/compare_coex_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare coexpression module assignment for gene pairs — compare_coex_modules","text":"dups data frame duplicate pairs, duplicated genes pair columns 1 2. Additional columns allowed, ignored present. genes_modules 2-column data frame genes column 1 coexpression modules belong column 1. can obtained, instance, BioNERO::exp2gcn().","code":""},{"path":"/reference/compare_coex_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare coexpression module assignment for gene pairs — compare_coex_modules","text":"data frame columns input dups, following extra columns: module_dup1 Character, name module gene 1 . module_dup2 Character, name module gene 2 . module_preservation Factor, classification gene pair based module preservation. Levels include 'preserved' (genes module), 'diverged' (genes different modules), 'one_absent' (one genes module), 'both_absent' (genes present module).","code":""},{"path":"/reference/compare_coex_modules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare coexpression module assignment for gene pairs — compare_coex_modules","text":"","code":"data(ath_dups) data(genes_and_modules) dups <- ath_dups genes_modules <- genes_and_modules  # Compare cm <- compare_coex_modules(dups, genes_and_modules)"},{"path":"/reference/compare_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare \\(\\tau\\) indices for gene pairs — compare_tau","title":"Compare \\(\\tau\\) indices for gene pairs — compare_tau","text":"Compare \\(\\tau\\) indices gene pairs","code":""},{"path":"/reference/compare_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare \\(\\tau\\) indices for gene pairs — compare_tau","text":"","code":"compare_tau(tau_df, dups)"},{"path":"/reference/compare_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare \\(\\tau\\) indices for gene pairs — compare_tau","text":"tau_df 3-column data frame \\(\\tau\\) indices expression classes gene returned calculate_tau(). dups data frame duplicate pairs, duplicated genes pair columns 1 2. Additional columns allowed, ignored present.","code":""},{"path":"/reference/compare_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare \\(\\tau\\) indices for gene pairs — compare_tau","text":"data frame columns input dups, following extra columns: tau_dup1 Numeric, \\(\\tau\\) index gene 1. class_dup1 Factor, expression-based class gene 1. tau_dup2 Numeric, \\(\\tau\\) index gene 2. class_dup2 Factor, expression-based class gene 2. tau_diff Numeric, absolute \\(\\tau\\) difference duplicate pairs. class_preserved Logical indicating expression-based class genes duplicate pair.","code":""},{"path":"/reference/compare_tau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare \\(\\tau\\) indices for gene pairs — compare_tau","text":"","code":"# Load data data(ath_se) data(ath_dups) dups <- ath_dups se <- ath_se  # Simulate different tissues SummarizedExperiment::colData(se)$tissue <- c(rep(\"seed\", 3), rep(\"leaf\", 3))  # Aggregate expression to tissue level aexp <- aggregate_to_tissue(se, \"tissue\")  # Calculate Tau tau_df <- calculate_tau(aexp)  # Compare Tau ct <- compare_tau(tau_df, dups)"},{"path":"/reference/exdiva-package.html","id":null,"dir":"Reference","previous_headings":"","what":"exdiva: A metric set to compute expression divergence between gene pairs — exdiva-package","title":"exdiva: A metric set to compute expression divergence between gene pairs — exdiva-package","text":"exdiva provides users set metrics calculate expression divergence gene pairs. metrics include correlation coefficients, Tau index tissue specificity, comparison coexpression module assignment.","code":""},{"path":[]},{"path":"/reference/exdiva-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"exdiva: A metric set to compute expression divergence between gene pairs — exdiva-package","text":"Maintainer: Fabrício Almeida-Silva fabricio_almeidasilva@hotmail.com (ORCID) Authors: Yves Van de Peer yves.vandepeer@psb.vib-ugent.(ORCID)","code":""},{"path":"/reference/genes_and_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Genes and modules for a coexpression network inferred from SRP201971 — genes_and_modules","title":"Genes and modules for a coexpression network inferred from SRP201971 — genes_and_modules","text":"Expression data (TPM) sample metadata obtained Refine Bio. signed gene coexpression network inferred BioNERO package.","code":""},{"path":"/reference/genes_and_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genes and modules for a coexpression network inferred from SRP201971 — genes_and_modules","text":"","code":"data(genes_and_modules)"},{"path":"/reference/genes_and_modules.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genes and modules for a coexpression network inferred from SRP201971 — genes_and_modules","text":"2-column data frame following variables: Genes Character, gene ID. Modules Character, module name.","code":""},{"path":"/reference/genes_and_modules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genes and modules for a coexpression network inferred from SRP201971 — genes_and_modules","text":"","code":"data(genes_and_modules)"},{"path":"/news/index.html","id":"exdiva-0990","dir":"Changelog","previous_headings":"","what":"exdiva 0.99.0","title":"exdiva 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package.","code":""}]
